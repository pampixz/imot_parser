import logging
import asyncio
from concurrent.futures import ThreadPoolExecutor

from imot_bg.spiders.imot_debug import ImotBgSpider
from scrapy.utils.project import get_project_settings
from scrapy.crawler import CrawlerProcess

logger = logging.getLogger(__name__)

executor = ThreadPoolExecutor(max_workers=1)  # –ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏


def run_spider_sync(city: str, district: str):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—É–∫–∞ Scrapy"""
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è –≥–æ—Ä–æ–¥–∞: {city}, —Ä–∞–π–æ–Ω: {district}")
    try:
        settings = get_project_settings()
        process = CrawlerProcess(settings)
        process.crawl(ImotBgSpider, city=city, district=district)
        process.start()
        logger.info("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—É–∫–∞: {e}")
        raise


async def run_spider_async(city: str, district: str, is_new_search=False):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—É–∫–∞.
    –ï—Å–ª–∏ is_new_search == True ‚Üí –ø–∞—Ä—Å–∏–º –∑–∞–Ω–æ–≤–æ.
    –ò–Ω–∞—á–µ ‚Üí –±–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã.
    """
    # –ü—Ä–∏–≤–æ–¥–∏–º is_new_search –∫ bool
    if isinstance(is_new_search, str):
        is_new_search = is_new_search.lower() == "true"

    if is_new_search:
        logger.info(f"üîÑ –ù–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω: {city} - {district}")
        loop = asyncio.get_event_loop()
        await loop.run_in_executor(executor, run_spider_sync, city, district)
    else:
        logger.info(f"üì¶ –î–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ –±–∞–∑—ã: {city} - {district}")
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        pass


if __name__ == "__main__":
    print(">>> run_spider_async started", flush=True)

    import sys
    if len(sys.argv) != 4:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python run_spider_async.py <city> <district> <is_new_search>")
        sys.exit(1)

    city = sys.argv[1]
    district = sys.argv[2]
    is_new_search = sys.argv[3].lower() == "true"

    asyncio.run(run_spider_async(city, district, is_new_search))

# –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:
# asyncio.run(run_spider_async("sofia", "lyulin-5", force=True))

